{"version":3,"sources":["index.js"],"names":["api","isMac","navigator","platform","toUpperCase","indexOf","folderMimeType","folderImg","failOverImg","useStyles","makeStyles","theme","appBar","backgroundColor","lightBlue","icon","marginRight","spacing","grow","flexGrow","conditionGrow","Object","_Users_hht_WebstormProjects_GoogleDriveProxy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_5__","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","&:hover","marginLeft","width","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","cardGrid","paddingTop","paddingBottom","card","flexDirection","cardMedia","cardContent","form","flexWrap","formControl","margin","minWidth","viewed","id","recentViews","JSON","parse","localStorage","getItem","splice","unshift","setItem","stringify","getReadableFileSizeString","fileSizeInBytes","i","Math","max","toFixed","getToken","cacheItems","ReactDOM","render","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","classes","inputRef","React","createRef","_React$useState","useState","loggedIn","open","submitting","_React$useState2","_Users_hht_WebstormProjects_GoogleDriveProxy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_4__","loginState","setLoginState","_React$useState3","_React$useState4","searchDisabled","setSearchDisabled","_React$useState5","_React$useState6","items","setItems","_React$useState7","_React$useState8","folders","setFolders","_React$useState9","_React$useState10","history","setHistory","_React$useState11","_React$useState12","favorites","setFavorites","_React$useState13","key","reverse","disabled","_React$useState14","orderby","setOrderby","_React$useState15","_React$useState16","view","setViewRaw","setView","obj","document","title","name","cmpfnfn","b","c","k","localeCompare","parseInt","loadResource","opts","rewind","value","length","slice","fetch","concat","_Users_hht_WebstormProjects_GoogleDriveProxy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","headers","Authorization","Content-Type","then","resp","json","res","sort","files","filter","el","mimeType","_Users_hht_WebstormProjects_GoogleDriveProxy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","postProcess","catch","alert","finally","searchTrigger","ev","preventDefault","current","accessModal","state","item","find","x","body","method","console","log","loginTrigger","username","password","login","status","token","afterLogin","err","useEffect","eventResponder","window","location","hash","substr","addEventListener","fetchFavorite","isAdd","includes","_ref","_Users_hht_WebstormProjects_GoogleDriveProxy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_hht_WebstormProjects_GoogleDriveProxy_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","sent","errorMessage","stop","_x","apply","this","arguments","handleMenuClose","handleModalClick","e","mimetype","target","parentNode","attributes","getNamedItem","tagName","replaceState","dispatchEvent","Event","_React$useState17","_React$useState18","anchorEl","setAnchorEl","Fragment","_material_ui_core_CssBaseline__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_10__","className","_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_11__","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_34__","aria-controls","aria-haspopup","onClick","event","currentTarget","_material_ui_icons__WEBPACK_IMPORTED_MODULE_12__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_25__","variant","_material_ui_core_Menu__WEBPACK_IMPORTED_MODULE_19__","keepMounted","Boolean","onClose","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_35__","r","map","innerText","autoComplete","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_36__","_material_ui_core_InputLabel__WEBPACK_IMPORTED_MODULE_37__","htmlFor","_material_ui_core_Select__WEBPACK_IMPORTED_MODULE_38__","onChange","inputProps","removeItem","_material_ui_icons__WEBPACK_IMPORTED_MODULE_13__","action","onSubmit","_material_ui_core_InputBase__WEBPACK_IMPORTED_MODULE_24__","placeholder","root","input","aria-label","type","_material_ui_icons__WEBPACK_IMPORTED_MODULE_14__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_15__","_material_ui_core_LinearProgress__WEBPACK_IMPORTED_MODULE_33__","_material_ui_core_Container__WEBPACK_IMPORTED_MODULE_28__","maxWidth","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_27__","container","xs","sm","md","_material_ui_core_Card__WEBPACK_IMPORTED_MODULE_29__","data-id","data-name","data-mimetype","style","time","modifiedTime","size","_material_ui_core_Tooltip__WEBPACK_IMPORTED_MODULE_39__","_material_ui_core_CardMedia__WEBPACK_IMPORTED_MODULE_30__","image","thumbnailLink","tooltipCardMedia","top","right","_material_ui_icons__WEBPACK_IMPORTED_MODULE_16__","fill","_material_ui_icons__WEBPACK_IMPORTED_MODULE_17__","_material_ui_core_CardContent__WEBPACK_IMPORTED_MODULE_31__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_20__","component","_material_ui_core_CardActions__WEBPACK_IMPORTED_MODULE_32__","placement","href","download","encodeURI","role","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_26__","pathname","aria-labelledby","fullWidth","noWrap","_material_ui_icons__WEBPACK_IMPORTED_MODULE_18__","src","controls","autoPlay","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_40__","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_42__","_material_ui_core_DialogContentText__WEBPACK_IMPORTED_MODULE_41__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_43__","autoFocus","required","label","onKeyPress","autoCapitalize","autoCorrect","evt","_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_44__","left","getElementById"],"mappings":"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","file":"static/js/main.b31a971c.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport {Menu as MenuIcon, Search, ArrowBack, NavigateNext, CloudDownload, FavoriteBorder, Favorite} from '@material-ui/icons';\nimport Menu from '@material-ui/core/Menu';\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core\";\nimport {lightBlue} from \"@material-ui/core/colors\";\nimport {fade} from \"@material-ui/core/styles\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nconst api = \"https://api.sheltonhuang.me/GoogleDriveProxy/\";\n\nconst isMac = navigator.platform.toUpperCase().indexOf('MAC')>=0;\nconst folderMimeType = 'application/vnd.google-apps.folder';\nconst folderImg = 'folderImg.jpg';\nconst failOverImg = 'imgNotFound.jpg';\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        backgroundColor: lightBlue[\"700\"],\n    },\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    conditionGrow: {\n        [theme.breakpoints.up('sm')]: {\n            flexGrow: 1,\n        }\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: 0,\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 600,\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(7),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n        width: 'calc(100% - 50px)'\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 7),\n        transition: theme.transitions.create('width'),\n        width: '100%'\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    form: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    }\n}));\n\n\n\nconst viewed = (id) => {\n    let recentViews = JSON.parse(localStorage.getItem(\"recentViews\") || \"[]\");\n    let position = recentViews.indexOf(id);\n    if (position > -1) recentViews.splice(position, 1);\n    recentViews.unshift(id);\n    recentViews.splice(100);\n    localStorage.setItem(\"recentViews\", JSON.stringify(recentViews));\n};\n\nfunction getReadableFileSizeString(fileSizeInBytes) {\n    let i = -1, byteUnits = [' kB', ' MB', ' GB', ' TB', 'PB', 'EB', 'ZB', 'YB'];\n    do { fileSizeInBytes = fileSizeInBytes / 1024; i++; } while (fileSizeInBytes > 1024);\n    return Math.max(fileSizeInBytes, 0.1).toFixed(1) + byteUnits[i];\n}\n\nconst getToken = ()=> localStorage.getItem(\"token\");\nlet cacheItems = [];\n\nfunction App() {\n    const classes = useStyles();\n    const inputRef = React.createRef();\n\n    const [loginState, setLoginState]  = React.useState({loggedIn: !!getToken(), open: false, submitting: false});\n    const [searchDisabled, setSearchDisabled] = React.useState(!getToken());\n    const [items, setItems] = React.useState([]);\n    const [folders, setFolders] = React.useState([]);\n    const [history, setHistory] = React.useState([]);\n    const [favorites, setFavorites] = React.useState([]);\n    const [orderby, setOrderby] = React.useState({key: 'modifiedTime', reverse:true, disabled: false});\n    const [view, setViewRaw] = React.useState({open: false});\n    const setView = (obj) => {\n        document.title = obj.open ? obj.name : \"GoogleDriveProxy\";\n        setViewRaw(obj);\n    };\n\n\n    const cmpfnfn = (a,b) => {\n        if (orderby.disabled) return 0;\n        if (orderby.reverse)  { let c = a; a = b; b = c; }\n        let k = orderby.key;\n        if (k === 'name' || k === 'modifiedTime') { return a[k].localeCompare(b[k]) }\n        else { return (a[k] && b[k]) ? parseInt(a[k]) - parseInt(b[k]) : a['modifiedTime'].localeCompare(b['modifiedTime']) }\n    };\n\n    const loadResource = (opts) => {\n        setSearchDisabled(true);\n        if (opts.rewind) {\n            opts.value = history[history.length-2];\n            setHistory(history.slice(0, history.length-1));\n        }\n        return fetch(`${api}${opts.value}`,  {headers: {Authorization: getToken(), 'Content-Type': 'application/json'}, ...(opts.opts ? opts.opts : {})})\n            .then(resp => resp.json())\n            .then((res) => {\n                setOrderby({...orderby, disabled: opts.sort === false});\n                setItems(cacheItems = res.files.filter(el => el.mimeType !== folderMimeType));\n                setFolders(res.files.filter(el => el.mimeType === folderMimeType));\n                !opts.rewind && !opts.opts && (!history.length || history[history.length-1] !== opts.value) && setHistory([...history, opts.value]);\n                return res;\n            })\n            .then((res) => opts.postProcess ? opts.postProcess(res) : null)\n            .catch(alert)\n            .finally(() => setSearchDisabled(false));\n    };\n\n    const searchTrigger = (ev) => {\n        ev && ev.preventDefault && ev.preventDefault();\n        loadResource({value: inputRef.current.value ? `query/${inputRef.current.value}` : 'folder/root'});\n    };\n\n\n    const accessModal = (state) => {\n        if (state.name) {\n            setView(state);\n        } else {\n            let item = cacheItems.find(x => x.id === state.id);\n            if (item) {\n                setView({...state, name: item.name});\n                viewed(state.id);\n            } else {\n                fetch(`${api}file`, {\n                        body: JSON.stringify({files: [state.id]}),\n                        method: 'POST',\n                        headers: {'Authorization': getToken(), 'Content-Type': 'application/json'}\n                    })\n                    .then(resp => resp.json())\n                    .then(res => {\n                        if (res.files.length === 1) {\n                            setView({...state, name: res.files[0].name});\n                            viewed(state.id);\n                        }\n                    })\n                    .catch(console.log);\n            }\n        }\n    };\n\n    const loginTrigger = (ev) => {\n        if (ev.key === 'Enter' && loginState.username && loginState.password) login();\n    };\n\n    const login = () => {\n        setLoginState({...loginState, submitting: true});\n        fetch(`${api}auth`, {\n            body: JSON.stringify({username: loginState.username, password: loginState.password}),\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'}\n        })\n            .then(resp => {\n                if (resp.status === 401) {\n                    alert(\"Incorrect username or password.\");\n                    throw resp;\n                } else if (resp.status === 200) {\n                    return resp.json();\n                } else {\n                    alert(\"Unknown response \" + resp.status + \" from server.\");\n                    throw resp;\n                }\n            })\n            .then(resp => {\n                localStorage.setItem('token', resp.token);\n                afterLogin();\n                setLoginState({loggedIn: true, open: false, submitting: false});\n            })\n            .catch(err => {\n                console.log(err);\n                setLoginState({...loginState, submitting: false});\n            })\n    };\n\n    const specialLogin = () => {\n        localStorage.setItem('token', loginState.password);\n        setLoginState({loggedIn: true, open: false, submitting: false});\n        afterLogin()\n    };\n\n    const logout = () => {\n        inputRef.current.value = \"\";\n        setLoginState({loggedIn: false, open: false, submitting: false});\n        setItems([]); setFolders([]); setFavorites([]); setHistory([]); setSearchDisabled(true);\n        localStorage.removeItem('token');\n        handleMenuClose();\n    };\n\n    const afterLogin = () => {\n        loadResource({value: 'folder/root'});\n        fetch(`${api}favorite`, {headers: {Authorization: getToken()}})\n            .then(resp => resp.json())\n            .then((res) => setFavorites(res.files))\n            .catch(alert);\n    };\n\n    useEffect(() => {\n        const eventResponder = () =>  accessModal({open: true, id: window.location.hash.substr(1)});\n        window.addEventListener(\"hashchange\", eventResponder, false);\n        window.addEventListener(\"myhashchange\", eventResponder, false);\n        if (window.location.hash.substr(1)) accessModal({open: true, id: window.location.hash.substr(1)});\n       if (getToken()) afterLogin();\n    // eslint-disable-next-line\n    }, []);\n\n\n    //modal\n\n    const fetchFavorite = (id) => {\n        let isAdd = !favorites.includes(id);\n        fetch(`${api}favorite/${id}`, {headers: {Authorization: getToken()}, method: isAdd ? 'PUT' : 'DELETE'})\n            .then(async resp => {\n                if (resp.status === 204)  {\n                    if (isAdd) {\n                        if (!favorites.includes(id)) {\n                            setFavorites([id, ...favorites])\n                        }\n                    } else {\n                        setFavorites(favorites.filter(x => x !== id));\n                    }\n                } else if (resp.status === 507) {\n                    throw (await resp.json()).errorMessage;\n                } else {\n                    throw resp.json();\n                }\n            })\n            .catch(alert)\n            .finally(handleMenuClose);\n    };\n\n    const fetchRecent = () => {\n        let recentViews = JSON.parse(localStorage.getItem(\"recentViews\") || \"[]\");\n        if (recentViews.length) {\n            loadResource({\n                sort: false,\n                value: \"file\",\n                opts: {\n                    body: JSON.stringify({files: recentViews}),\n                    method: 'POST',\n                }}).then(handleMenuClose)\n        }\n    };\n\n    const changeReverse = (e) => {\n        if (e.target.innerText && e.target.innerText.includes('Order By')) {\n            setOrderby({...orderby, reverse: !orderby.reverse})\n        }\n    };\n\n    const handleModalClick = (e) => {\n        let el = e.target, id, name, mimetype;\n        do {\n            el = el.parentNode;\n            id = el.attributes.getNamedItem('data-id') ? el.attributes.getNamedItem('data-id').value : null;\n            name = el.attributes.getNamedItem('data-name') ? el.attributes.getNamedItem('data-name').value : null;\n            mimetype = el.attributes.getNamedItem('data-mimetype') ? el.attributes.getNamedItem('data-mimetype').value : null;\n        } while (el.parentNode && !(id && name && mimetype));\n\n        if (e.target.tagName === 'svg' || e.target.tagName === 'path') {  // is favorite click\n            fetchFavorite(id);\n        } else {\n            if (mimetype === folderMimeType) {\n                loadResource({value: `folder/${id}`});\n            } else {\n                window.history.replaceState({}, '', '#' + id);\n                window.dispatchEvent(new Event(\"myhashchange\"));\n            }\n        }\n    };\n\n    const handleModalClose = () => {\n        setView({open: false});\n        window.history.replaceState({}, '', window.location.pathname);\n    };\n\n\n    //menu\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleMenuClick = (event) => setAnchorEl(event.currentTarget);\n\n    const handleMenuClose = () => setAnchorEl(null);\n\n\n    function tooltipCardMedia(card) {\n        let time = card.modifiedTime;\n        let size = card.size;\n        if (time && size) {\n            return  (\n                <Tooltip title={<div>{getReadableFileSizeString(parseInt(size))}<br />{time.substr(0,10)}</div>}>\n                    <CardMedia className={classes.cardMedia} onClick={handleModalClick} style={{height: 0}}\n                    image={card.mimeType === folderMimeType ? folderImg : (card.thumbnailLink || failOverImg)} />\n                </Tooltip>);\n        } else {\n            return (\n                <CardMedia className={classes.cardMedia} title={card.name} onClick={handleModalClick}\n                    image={card.mimeType === folderMimeType ? folderImg : (card.thumbnailLink || failOverImg)} />);\n        }\n    }\n\n\n    return (\n        <>\n            <CssBaseline />\n                <AppBar position=\"sticky\" className={classes.appBar}>\n                    <Toolbar>\n                        {loginState.loggedIn ?\n                            (<IconButton color=\"inherit\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleMenuClick}><MenuIcon/></IconButton>) :\n                            ( <Button  variant=\"contained\"  onClick={() => setLoginState({...loginState, open: true})} >Login</Button>)\n                        }\n                        <Menu\n                            id=\"simple-menu\" keepMounted\n                            anchorEl={anchorEl}\n                            open={Boolean(anchorEl)}\n                            onClose={handleMenuClose}\n                        >\n                            <MenuItem onClick={() => loadResource({value: \"folder/root\"})} >Home</MenuItem>\n                            <MenuItem onClick={() => loadResource({\n                                value: \"favorite?alt=content\",\n                                postProcess: (r) => setFavorites(r.files.map(x => x.id)) })} >Favorites</MenuItem>\n                            <MenuItem onClick={changeReverse}>\n                                <form className={classes.form} autoComplete=\"off\">\n                                    <FormControl className={classes.formControl}>\n                                        <InputLabel htmlFor=\"orderby\">Order By{orderby.reverse ? ' ⬇️':' ⬆️'}</InputLabel>\n                                        <Select\n                                            value={orderby.key}\n                                            onChange={(event) => setOrderby({...orderby, key: event.target.value})}\n                                            inputProps={{ name: 'Order By', id: 'orderby', }}\n                                        >\n                                            <MenuItem value={'modifiedTime'}>Last Modified</MenuItem>\n                                            <MenuItem value={'name'}>Name</MenuItem>\n                                            <MenuItem value={'size'}>Size</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </form>\n                            </MenuItem>\n                            <MenuItem onClick={fetchRecent} >Recently Viewed</MenuItem>\n                            <MenuItem onClick={logout} >Logout</MenuItem>\n                        </Menu>\n\n                        <div className={classes.grow} />\n                        <div className={classes.search}>\n                            <div className={classes.searchIcon}>\n                                <Search />\n                            </div>\n                            <form action=\".\" onSubmit={searchTrigger}>\n                                <InputBase\n                                    placeholder=\"Search…\"\n                                    classes={{\n                                        root: classes.inputRoot,\n                                        input: classes.inputInput,\n                                    }}\n                                    inputProps={{ 'aria-label': 'Search keywords' }}\n                                    inputRef={inputRef}\n                                    disabled={searchDisabled}\n                                    type='search'\n                                />\n                                <IconButton disabled={searchDisabled} onClick={searchTrigger} color='inherit'><NavigateNext/></IconButton>\n                            </form>\n                        </div>\n                        <div className={classes.grow} />\n                        <IconButton color=\"inherit\" disabled={history.length <= 1} onClick={() => loadResource({rewind: true})}><ArrowBack/></IconButton>\n                    </Toolbar>\n                    {searchDisabled && loginState.loggedIn && <LinearProgress variant=\"query\" />}\n                </AppBar>\n            <main>\n                <Container className={classes.cardGrid} maxWidth=\"lg\" >\n                    <Grid container spacing={4}>\n                        {folders.sort(cmpfnfn).concat(items.sort(cmpfnfn)).map(card => (\n                            <Grid item key={card['id']} xs={12} sm={6} md={3}  >\n                                <Card className={classes.card} data-id={card.id} data-name={card.name} data-mimetype={card.mimeType} style={{position: 'relative'}}>\n                                    {tooltipCardMedia(card)}\n                                    {card.mimeType !== folderMimeType &&\n                                    <IconButton size=\"small\" color=\"primary\" onClick={handleModalClick} style={{ position: 'absolute', top: '17px', right: '20px' }}>\n                                        {favorites.includes(card.id) ? <Favorite style={{fill: '#ea062c'}}/> : <FavoriteBorder style={{fill: '#ea062c'}}/>}\n                                    </IconButton>}\n                                    <CardContent className={classes.cardContent}>\n                                        <Typography variant=\"subtitle1\" component=\"h2\">\n                                            {card.name}\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        <Button size=\"small\" color=\"primary\" onClick={handleModalClick}>\n                                            View\n                                        </Button>\n                                        {card.mimeType !== folderMimeType &&\n                                        (<Tooltip title={getReadableFileSizeString(parseInt(card.size))} placement=\"top\">\n                                            <Button size=\"small\" color=\"primary\" href={`${api}file/${card.id}`} download={card.name} target=\"_blank\">\n                                            Download\n                                            </Button>\n                                        </Tooltip>)}\n                                        {card.mimeType !== folderMimeType && isMac &&\n                                        <Button size=\"small\" color=\"primary\" href={`iina://open?url=${encodeURI(api+'file/'+card.id)}`}>\n                                            <span role=\"img\" aria-label=\"play in iina\">▶️IINA</span>\n                                        </Button>}\n                                    </CardActions>\n                                </Card>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Container>\n            </main>\n            <Dialog open={view.open} onClose={handleModalClose} aria-labelledby=\"view screen\" fullWidth maxWidth=\"lg\">\n                {view.open &&\n                <Toolbar>\n                    <Typography noWrap={true} variant=\"h6\" className={classes.title}>\n                        {view.name}\n                    </Typography>\n                    <div className={classes.grow} />\n                    <IconButton size=\"small\" color=\"primary\" onClick={() => fetchFavorite(view.id)} style={{marginRight: '4px'}} >\n                        {favorites.includes(view.id) ? <Favorite style={{fill: '#ea062c'}}/> : <FavoriteBorder style={{fill: '#ea062c'}}/>}\n                    </IconButton>\n                    <IconButton size=\"small\" color=\"primary\" href={`${api}file/${view.id}`} download={view.name} target=\"_blank\">\n                        <CloudDownload/>\n                    </IconButton>\n                </Toolbar>\n                }\n                {view.open && <video src={`${api}file/${view.id}`} controls={true} autoPlay />}\n            </Dialog>\n            <Dialog open={loginState.open} onClose={() => setLoginState({...loginState, open: false})} aria-labelledby=\"login window\" fullWidth maxWidth=\"xs\">\n                <DialogTitle>Login to GoogleDriveProxy</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        To use this app, please enter your credential here.\n                    </DialogContentText>\n                    <form autoComplete=\"off\" action=\".\">\n                        <TextField autoFocus required fullWidth margin=\"normal\"\n                             type=\"text\" label=\"Username\" disabled={loginState.submitting} onKeyPress={loginTrigger} inputProps={{ autoCapitalize: 'off', autoCorrect: 'off' }}\n                                   onChange={(evt) => setLoginState({...loginState, username: evt.target.value})}\n                        />\n                        <TextField required fullWidth margin=\"normal\"\n                             type=\"password\" label=\"Password\" disabled={loginState.submitting} onKeyPress={loginTrigger}\n                                   onChange={(evt) => setLoginState({...loginState, password: evt.target.value})}\n                        />\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button style={{position: 'absolute', left: \"10px\"}} onClick={specialLogin} disabled={!loginState.password}/>\n                    <Button disabled={!loginState.username || !loginState.password || loginState.submitting} onClick={login} color=\"primary\">Submit</Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}