{"version":3,"sources":["index.js"],"names":["api","isMac","navigator","platform","toUpperCase","indexOf","folderMimeType","folderImg","failOverImg","useStyles","makeStyles","theme","appBar","backgroundColor","lightBlue","icon","marginRight","spacing","grow","flexGrow","conditionGrow","Object","_Users_hht_WebstormProjects_GoogleDriveProxy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_5__","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","&:hover","marginLeft","width","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","cardGrid","paddingTop","paddingBottom","card","flexDirection","cardMedia","cardContent","form","flexWrap","formControl","margin","minWidth","viewed","id","recentViews","JSON","parse","localStorage","getItem","splice","unshift","setItem","stringify","getReadableFileSizeString","fileSizeInBytes","i","Math","max","toFixed","getToken","cacheItems","ReactDOM","render","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","classes","inputRef","React","createRef","_React$useState","useState","loggedIn","open","submitting","_React$useState2","_Users_hht_WebstormProjects_GoogleDriveProxy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_4__","loginState","setLoginState","_React$useState3","_React$useState4","searchDisabled","setSearchDisabled","_React$useState5","_React$useState6","items","setItems","_React$useState7","_React$useState8","folders","setFolders","_React$useState9","_React$useState10","history","setHistory","_React$useState11","_React$useState12","favorites","setFavorites","_React$useState13","key","reverse","disabled","_React$useState14","orderby","setOrderby","_React$useState15","_React$useState16","view","setViewRaw","setView","obj","document","title","name","previous_state","URLSearchParams","hashEventResponder","e","params","window","location","hash","substr","queryParam","get","fileParam","newParams","set","type","push","loadResource","value","accessModal","replaceState","toString","cmpfnfn","b","c","k","localeCompare","parseInt","opts","fetch","concat","_Users_hht_WebstormProjects_GoogleDriveProxy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","headers","Authorization","Content-Type","then","resp","json","res","sort","files","filter","el","mimeType","postProcess","catch","alert","finally","scrollTo","searchTrigger","ev","preventDefault","current","dispatchEvent","Event","state","item","find","x","body","method","length","console","log","loginTrigger","username","password","login","status","token","afterLogin","err","useEffect","addEventListener","updateFavorite","isAdd","includes","_ref","_Users_hht_WebstormProjects_GoogleDriveProxy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_hht_WebstormProjects_GoogleDriveProxy_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","_Users_hht_WebstormProjects_GoogleDriveProxy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","sent","errorMessage","stop","_x","apply","this","arguments","handleMenuClose","handleModalClick","mimetype","target","parentNode","attributes","getNamedItem","tagName","_React$useState17","_React$useState18","anchorEl","setAnchorEl","Fragment","_material_ui_core_CssBaseline__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_10__","className","_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_11__","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_34__","aria-controls","aria-haspopup","onClick","event","currentTarget","_material_ui_icons__WEBPACK_IMPORTED_MODULE_12__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_25__","variant","_material_ui_core_Menu__WEBPACK_IMPORTED_MODULE_19__","keepMounted","Boolean","onClose","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_35__","r","map","innerText","autoComplete","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_36__","_material_ui_core_InputLabel__WEBPACK_IMPORTED_MODULE_37__","htmlFor","_material_ui_core_Select__WEBPACK_IMPORTED_MODULE_38__","onChange","inputProps","removeItem","_material_ui_icons__WEBPACK_IMPORTED_MODULE_13__","action","onSubmit","_material_ui_core_InputBase__WEBPACK_IMPORTED_MODULE_24__","placeholder","root","input","aria-label","_material_ui_icons__WEBPACK_IMPORTED_MODULE_14__","pop","_material_ui_icons__WEBPACK_IMPORTED_MODULE_15__","_material_ui_core_LinearProgress__WEBPACK_IMPORTED_MODULE_33__","_material_ui_core_Container__WEBPACK_IMPORTED_MODULE_28__","maxWidth","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_27__","container","xs","sm","md","_material_ui_core_Card__WEBPACK_IMPORTED_MODULE_29__","data-id","data-name","data-mimetype","style","time","modifiedTime","size","_material_ui_core_Tooltip__WEBPACK_IMPORTED_MODULE_39__","placement","react_lazy_load_image_component__WEBPACK_IMPORTED_MODULE_45__","src","thumbnailLink","_material_ui_core_CardMedia__WEBPACK_IMPORTED_MODULE_30__","image","tooltipCardMedia","top","right","_material_ui_icons__WEBPACK_IMPORTED_MODULE_16__","fill","_material_ui_icons__WEBPACK_IMPORTED_MODULE_17__","_material_ui_core_CardContent__WEBPACK_IMPORTED_MODULE_31__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_20__","component","_material_ui_core_CardActions__WEBPACK_IMPORTED_MODULE_32__","href","download","encodeURI","role","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_26__","delete","aria-labelledby","fullWidth","noWrap","_material_ui_icons__WEBPACK_IMPORTED_MODULE_18__","controls","autoPlay","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_40__","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_42__","_material_ui_core_DialogContentText__WEBPACK_IMPORTED_MODULE_41__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_43__","autoFocus","required","label","onKeyPress","autoCapitalize","autoCorrect","evt","_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_44__","left","getElementById"],"mappings":"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","file":"static/js/main.2cff8e8e.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport {Menu as MenuIcon, Search, ArrowBack, NavigateNext, CloudDownload, FavoriteBorder, Favorite} from '@material-ui/icons';\nimport Menu from '@material-ui/core/Menu';\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core\";\nimport {lightBlue} from \"@material-ui/core/colors\";\nimport {fade} from \"@material-ui/core/styles\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\nconst api = \"https://api.sheltonhuang.me/GoogleDriveProxy/\";\n\nconst isMac = navigator.platform.toUpperCase().indexOf('MAC')>=0;\nconst folderMimeType = 'application/vnd.google-apps.folder';\nconst folderImg = 'folderImg.jpg';\nconst failOverImg = 'imgNotFound.jpg';\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        backgroundColor: lightBlue[\"700\"],\n    },\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    conditionGrow: {\n        [theme.breakpoints.up('sm')]: {\n            flexGrow: 1,\n        }\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: 0,\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 600,\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(7),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n        width: 'calc(100% - 50px)'\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 7),\n        transition: theme.transitions.create('width'),\n        width: '100%'\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    form: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    }\n}));\n\n\n\nconst viewed = (id) => {\n    let recentViews = JSON.parse(localStorage.getItem(\"recentViews\") || \"[]\");\n    let position = recentViews.indexOf(id);\n    if (position > -1) recentViews.splice(position, 1);\n    recentViews.unshift(id);\n    recentViews.splice(100);\n    localStorage.setItem(\"recentViews\", JSON.stringify(recentViews));\n};\n\nfunction getReadableFileSizeString(fileSizeInBytes) {\n    let i = -1, byteUnits = [' kB', ' MB', ' GB', ' TB', 'PB', 'EB', 'ZB', 'YB'];\n    do { fileSizeInBytes = fileSizeInBytes / 1024; i++; } while (fileSizeInBytes > 1024);\n    return Math.max(fileSizeInBytes, 0.1).toFixed(1) + byteUnits[i];\n}\n\nconst getToken = ()=> localStorage.getItem(\"token\");\nlet cacheItems = [];\n\nfunction App() {\n    const classes = useStyles();\n    const inputRef = React.createRef();\n\n    const [loginState, setLoginState]  = React.useState({loggedIn: !!getToken(), open: false, submitting: false});\n    const [searchDisabled, setSearchDisabled] = React.useState(!getToken());\n    const [items, setItems] = React.useState([]);\n    const [folders, setFolders] = React.useState([]);\n    const [history, setHistory] = React.useState(['folder/root']);\n    const [favorites, setFavorites] = React.useState([]);\n    const [orderby, setOrderby] = React.useState({key: 'modifiedTime', reverse:true, disabled: false});\n    const [view, setViewRaw] = React.useState({open: false});\n    const setView = (obj) => {\n        document.title = obj.open ? obj.name : \"GoogleDriveProxy\";\n        setViewRaw(obj);\n    };\n\n    let previous_state =  new URLSearchParams();\n    const hashEventResponder = (e) => {\n        const params = new URLSearchParams(window.location.hash.substr(1));\n        const queryParam = params.get('q'), fileParam = params.get('f');\n        const newParams = new URLSearchParams();\n        newParams.set('q', queryParam ? queryParam : 'folder/root');\n        if (fileParam) newParams.set('f', fileParam);\n\n        if (previous_state.get('q') != newParams.get('q')) {\n            if (e && e.type != 'rewind') {\n                history.push(newParams.get('q'));\n            }\n            loadResource({value: newParams.get('q')});\n        }\n\n        if (fileParam) {\n            accessModal({open: true, id: fileParam});\n        } else {\n            setView({open: false});\n        }\n        window.history.replaceState({}, '', '#' + newParams.toString());\n        previous_state = newParams;\n    };\n\n    const rewind = () => {\n        let params = new URLSearchParams(window.location.hash.substr(1));\n        history.pop();\n        params.set('q', history.pop());\n        window.history.replaceState({}, '', '#' + params.toString());\n        window.dispatchEvent(new Event(\"rewind\"));\n    };\n\n\n    const cmpfnfn = (a,b) => {\n        if (orderby.disabled) return 0;\n        if (orderby.reverse)  { let c = a; a = b; b = c; }\n        let k = orderby.key;\n        if (k === 'name' || k === 'modifiedTime') { return a[k].localeCompare(b[k]) }\n        else { return (a[k] && b[k]) ? parseInt(a[k]) - parseInt(b[k]) : a['modifiedTime'].localeCompare(b['modifiedTime']) }\n    };\n\n    const loadResource = (opts) => {\n        setSearchDisabled(true);\n        return fetch(`${api}${opts.value}`,  {headers: {Authorization: getToken(), 'Content-Type': 'application/json'}, ...(opts.opts ? opts.opts : {})})\n            .then(resp => resp.json())\n            .then((res) => {\n                setOrderby({...orderby, disabled: opts.sort === false});\n                setItems(cacheItems = res.files.filter(el => el.mimeType !== folderMimeType));\n                setFolders(res.files.filter(el => el.mimeType === folderMimeType));\n                return res;\n            })\n            .then((res) => opts.postProcess ? opts.postProcess(res) : null)\n            .catch(alert)\n            .finally(() => {\n                window.scrollTo(0, 0);\n                setSearchDisabled(false);\n            });\n    };\n\n    const searchTrigger = (ev) => {\n        ev && ev.preventDefault && ev.preventDefault();\n        let params = new URLSearchParams(window.location.hash.substr(1));\n        params.set('q', inputRef.current.value ? `query/${inputRef.current.value}` : 'folder/root');\n        window.history.replaceState({}, '', '#' + params.toString());\n        window.dispatchEvent(new Event(\"myhashchange\"));\n    };\n\n\n    const accessModal = (state) => {\n        if (state.name) {\n            setView(state);\n        } else {\n            let item = cacheItems.find(x => x.id === state.id);\n            if (item) {\n                setView({...state, name: item.name});\n                viewed(state.id);\n            } else {\n                fetch(`${api}file`, {\n                        body: JSON.stringify({files: [state.id]}),\n                        method: 'POST',\n                        headers: {'Authorization': getToken(), 'Content-Type': 'application/json'}\n                    })\n                    .then(resp => resp.json())\n                    .then(res => {\n                        if (res.files.length === 1) {\n                            setView({...state, name: res.files[0].name});\n                            viewed(state.id);\n                        }\n                    })\n                    .catch(console.log);\n            }\n        }\n    };\n\n    const loginTrigger = (ev) => {\n        if (ev.key === 'Enter' && loginState.username && loginState.password) login();\n    };\n\n    const login = () => {\n        setLoginState({...loginState, submitting: true});\n        fetch(`${api}auth`, {\n            body: JSON.stringify({username: loginState.username, password: loginState.password}),\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'}\n        })\n            .then(resp => {\n                if (resp.status === 401) {\n                    alert(\"Incorrect username or password.\");\n                    throw resp;\n                } else if (resp.status === 200) {\n                    return resp.json();\n                } else {\n                    alert(\"Unknown response \" + resp.status + \" from server.\");\n                    throw resp;\n                }\n            })\n            .then(resp => {\n                localStorage.setItem('token', resp.token);\n                afterLogin();\n                setLoginState({loggedIn: true, open: false, submitting: false});\n            })\n            .catch(err => {\n                console.log(err);\n                setLoginState({...loginState, submitting: false});\n            })\n    };\n\n    const specialLogin = () => {\n        localStorage.setItem('token', loginState.password);\n        setLoginState({loggedIn: true, open: false, submitting: false});\n        afterLogin()\n    };\n\n    const logout = () => {\n        inputRef.current.value = \"\";\n        setLoginState({loggedIn: false, open: false, submitting: false});\n        setItems([]); setFolders([]); setFavorites([]); setHistory([]); setSearchDisabled(true);\n        localStorage.removeItem('token');\n        handleMenuClose();\n    };\n\n    const afterLogin = () => {\n        hashEventResponder();\n        fetch(`${api}favorite`, {headers: {Authorization: getToken()}})\n            .then(resp => resp.json())\n            .then((res) => setFavorites(res.files))\n            .catch(alert);\n    };\n\n    useEffect(() => {\n        window.addEventListener(\"hashchange\", hashEventResponder, false);\n        window.addEventListener(\"myhashchange\", hashEventResponder, false);\n        window.addEventListener(\"rewind\", hashEventResponder, false);\n       if (getToken()) afterLogin();\n    // eslint-disable-next-line\n    }, []);\n\n\n    //modal\n\n    const updateFavorite = (id) => {\n        let isAdd = !favorites.includes(id);\n        fetch(`${api}favorite/${id}`, {headers: {Authorization: getToken()}, method: isAdd ? 'PUT' : 'DELETE'})\n            .then(async resp => {\n                if (resp.status === 204)  {\n                    if (isAdd) {\n                        if (!favorites.includes(id)) {\n                            setFavorites([id, ...favorites])\n                        }\n                    } else {\n                        setFavorites(favorites.filter(x => x !== id));\n                    }\n                } else if (resp.status === 507) {\n                    throw (await resp.json()).errorMessage;\n                } else {\n                    throw resp.json();\n                }\n            })\n            .catch(alert)\n            .finally(handleMenuClose);\n    };\n\n    const fetchRecent = () => {\n        let recentViews = JSON.parse(localStorage.getItem(\"recentViews\") || \"[]\");\n        if (recentViews.length) {\n            loadResource({\n                sort: false,\n                value: \"file\",\n                opts: {\n                    body: JSON.stringify({files: recentViews}),\n                    method: 'POST',\n                }}).then(handleMenuClose)\n        }\n    };\n\n    const changeReverse = (e) => {\n        if (e.target.innerText && e.target.innerText.includes('Order By')) {\n            setOrderby({...orderby, reverse: !orderby.reverse})\n        }\n    };\n\n    const handleModalClick = (e) => {\n        let el = e.target, id, name, mimetype;\n        do {\n            el = el.parentNode;\n            id = el.attributes.getNamedItem('data-id') ? el.attributes.getNamedItem('data-id').value : null;\n            name = el.attributes.getNamedItem('data-name') ? el.attributes.getNamedItem('data-name').value : null;\n            mimetype = el.attributes.getNamedItem('data-mimetype') ? el.attributes.getNamedItem('data-mimetype').value : null;\n        } while (el.parentNode && !(id && name && mimetype));\n\n        if (e.target.tagName === 'svg' || e.target.tagName === 'path') {  // is favorite click\n            updateFavorite(id);\n        } else {\n            let params = new URLSearchParams(window.location.hash.substr(1));\n            if (mimetype === folderMimeType) {\n                params.set('q', `folder/${id}`);\n                window.history.replaceState({}, '', '#' + params.toString());\n                window.dispatchEvent(new Event(\"myhashchange\"));\n            } else {\n                params.set('f', id);\n                window.history.replaceState({}, '', '#' + params.toString());\n                window.dispatchEvent(new Event(\"myhashchange\"));\n            }\n        }\n    };\n\n    const handleModalClose = () => {\n        let params = new URLSearchParams(window.location.hash.substr(1));\n        params.delete('f');\n        window.history.replaceState({}, '', '#' + params.toString());\n        window.dispatchEvent(new Event(\"myhashchange\"));\n    };\n\n\n    //menu\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleMenuClick = (event) => setAnchorEl(event.currentTarget);\n\n    const handleMenuClose = () => setAnchorEl(null);\n\n\n    function tooltipCardMedia(card) {\n        let time = card.modifiedTime;\n        let size = card.size;\n        if (time && size) {\n            return  (\n                <Tooltip title={<div>{getReadableFileSizeString(parseInt(size))}<br />{time.substr(0,10)}</div>} placement=\"top\">\n                    <div>\n                        <LazyLoadImage onClick={handleModalClick}\n                                       src={card.mimeType === folderMimeType ? folderImg : (card.thumbnailLink || failOverImg)} />\n                    </div>\n                </Tooltip>);\n        } else {\n            return <CardMedia className={classes.cardMedia} title={card.name} onClick={handleModalClick} image={folderImg} />;\n        }\n    }\n\n\n    return (\n        <>\n            <CssBaseline />\n                <AppBar position=\"sticky\" className={classes.appBar}>\n                    <Toolbar>\n                        {loginState.loggedIn ?\n                            (<IconButton color=\"inherit\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleMenuClick}><MenuIcon/></IconButton>) :\n                            ( <Button  variant=\"contained\"  onClick={() => setLoginState({...loginState, open: true})} >Login</Button>)\n                        }\n                        <Menu\n                            id=\"simple-menu\" keepMounted\n                            anchorEl={anchorEl}\n                            open={Boolean(anchorEl)}\n                            onClose={handleMenuClose}\n                        >\n                            <MenuItem onClick={() => {\n                                window.history.replaceState({}, '', '#');\n                                window.dispatchEvent(new Event(\"myhashchange\"));\n                            }} >Home</MenuItem>\n                            <MenuItem onClick={() => loadResource({\n                                value: \"favorite?alt=content\",\n                                postProcess: (r) => setFavorites(r.files.map(x => x.id)) })} >Favorites</MenuItem>\n                            <MenuItem onClick={changeReverse}>\n                                <form className={classes.form} autoComplete=\"off\">\n                                    <FormControl className={classes.formControl}>\n                                        <InputLabel htmlFor=\"orderby\">Order By{orderby.reverse ? ' ⬇️':' ⬆️'}</InputLabel>\n                                        <Select\n                                            value={orderby.key}\n                                            onChange={(event) => setOrderby({...orderby, key: event.target.value})}\n                                            inputProps={{ name: 'Order By', id: 'orderby', }}\n                                        >\n                                            <MenuItem value={'modifiedTime'}>Last Modified</MenuItem>\n                                            <MenuItem value={'name'}>Name</MenuItem>\n                                            <MenuItem value={'size'}>Size</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </form>\n                            </MenuItem>\n                            <MenuItem onClick={fetchRecent} >Recently Viewed</MenuItem>\n                            <MenuItem onClick={logout} >Logout</MenuItem>\n                        </Menu>\n\n                        <div className={classes.grow} />\n                        <div className={classes.search}>\n                            <div className={classes.searchIcon}>\n                                <Search />\n                            </div>\n                            <form action=\".\" onSubmit={searchTrigger}>\n                                <InputBase\n                                    placeholder=\"Search…\"\n                                    classes={{\n                                        root: classes.inputRoot,\n                                        input: classes.inputInput,\n                                    }}\n                                    inputProps={{ 'aria-label': 'Search keywords' }}\n                                    inputRef={inputRef}\n                                    disabled={searchDisabled}\n                                    type='search'\n                                />\n                                <IconButton disabled={searchDisabled} onClick={searchTrigger} color='inherit'><NavigateNext/></IconButton>\n                            </form>\n                        </div>\n                        <div className={classes.grow} />\n                        <IconButton color=\"inherit\" disabled={history.length <= 1} onClick={rewind}><ArrowBack/></IconButton>\n                    </Toolbar>\n                    {searchDisabled && loginState.loggedIn && <LinearProgress variant=\"query\" />}\n                </AppBar>\n            <main>\n                <Container className={classes.cardGrid} maxWidth=\"lg\" >\n                    <Grid container spacing={4}>\n                        {folders.sort(cmpfnfn).concat(items.sort(cmpfnfn)).map(card => (\n                            <Grid item key={card['id']} xs={12} sm={6} md={3}  >\n                                <Card className={classes.card} data-id={card.id} data-name={card.name} data-mimetype={card.mimeType} style={{position: 'relative'}}>\n                                    {tooltipCardMedia(card)}\n                                    {card.mimeType !== folderMimeType &&\n                                    <IconButton size=\"small\" color=\"primary\" onClick={handleModalClick} style={{ position: 'absolute', top: '17px', right: '20px' }}>\n                                        {favorites.includes(card.id) ? <Favorite style={{fill: '#ea062c'}}/> : <FavoriteBorder style={{fill: '#ea062c'}}/>}\n                                    </IconButton>}\n                                    <CardContent className={classes.cardContent}>\n                                        <Typography variant=\"subtitle2\" component=\"h2\">\n                                            {card.name}\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        <Button size=\"small\" color=\"primary\" onClick={handleModalClick}>\n                                            View\n                                        </Button>\n                                        {card.mimeType !== folderMimeType &&\n                                        (<Tooltip title={getReadableFileSizeString(parseInt(card.size))} placement=\"top\">\n                                            <Button size=\"small\" color=\"primary\" href={`${api}file/${card.id}`} download={card.name} target=\"_blank\">\n                                            Download\n                                            </Button>\n                                        </Tooltip>)}\n                                        {card.mimeType !== folderMimeType && isMac &&\n                                        <Button size=\"small\" color=\"primary\" href={`iina://open?url=${encodeURI(api+'file/'+card.id)}`}>\n                                            <span role=\"img\" aria-label=\"play in iina\">▶️IINA</span>\n                                        </Button>}\n                                    </CardActions>\n                                </Card>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Container>\n            </main>\n            <Dialog open={view.open} onClose={handleModalClose} aria-labelledby=\"view screen\" fullWidth maxWidth=\"lg\">\n                {view.open &&\n                <Toolbar>\n                    <Typography noWrap={true} variant=\"h6\" className={classes.title}>\n                        {view.name}\n                    </Typography>\n                    <div className={classes.grow} />\n                    <IconButton size=\"small\" color=\"primary\" onClick={() => updateFavorite(view.id)} style={{marginRight: '4px'}} >\n                        {favorites.includes(view.id) ? <Favorite style={{fill: '#ea062c'}}/> : <FavoriteBorder style={{fill: '#ea062c'}}/>}\n                    </IconButton>\n                    <IconButton size=\"small\" color=\"primary\" href={`${api}file/${view.id}`} download={view.name} target=\"_blank\">\n                        <CloudDownload/>\n                    </IconButton>\n                </Toolbar>\n                }\n                {view.open && <video src={`${api}file/${view.id}`} controls={true} autoPlay />}\n            </Dialog>\n            <Dialog open={loginState.open} onClose={() => setLoginState({...loginState, open: false})} aria-labelledby=\"login window\" fullWidth maxWidth=\"xs\">\n                <DialogTitle>Login to GoogleDriveProxy</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        To use this app, please enter your credential here.\n                    </DialogContentText>\n                    <form autoComplete=\"off\" action=\".\">\n                        <TextField autoFocus required fullWidth margin=\"normal\"\n                             type=\"text\" label=\"Username\" disabled={loginState.submitting} onKeyPress={loginTrigger} inputProps={{ autoCapitalize: 'off', autoCorrect: 'off' }}\n                                   onChange={(evt) => setLoginState({...loginState, username: evt.target.value})}\n                        />\n                        <TextField required fullWidth margin=\"normal\"\n                             type=\"password\" label=\"Password\" disabled={loginState.submitting} onKeyPress={loginTrigger}\n                                   onChange={(evt) => setLoginState({...loginState, password: evt.target.value})}\n                        />\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button style={{position: 'absolute', left: \"10px\"}} onClick={specialLogin} disabled={!loginState.password}/>\n                    <Button disabled={!loginState.username || !loginState.password || loginState.submitting} onClick={login} color=\"primary\">Submit</Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}