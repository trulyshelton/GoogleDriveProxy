{"version":3,"sources":["index.js"],"names":["api","isMac","navigator","platform","toUpperCase","indexOf","folderMimeType","useStyles","makeStyles","theme","appBar","backgroundColor","lightBlue","icon","marginRight","spacing","grow","flexGrow","conditionGrow","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","cardGrid","paddingTop","paddingBottom","card","flexDirection","cardMedia","cursor","cardContent","form","flexWrap","formControl","margin","minWidth","center","textAlign","getOrderBy","JSON","parse","localStorage","getItem","viewed","id","recentViews","splice","unshift","setItem","stringify","getHistory","getReadableFileSizeString","fileSizeInBytes","i","Math","max","toFixed","getToken","cacheItems","App","classes","inputRef","React","createRef","iniHistory","useState","loggedIn","open","submitting","loginState","setLoginState","searchDisabled","setSearchDisabled","nextPageToken","opts","nextPage","setNextPage","items","setItems","folders","setFolders","history","setHistory","favorites","setFavorites","orderby","setOrderby","view","setViewRaw","setView","obj","document","title","name","previous_state","URLSearchParams","length","set","hashEventResponder","e","params","window","location","hash","substr","queryParam","get","fileParam","newParams","item","oB","orderByQuery","key","order","toString","type","push","loadResource","value","force","accessModal","replaceState","fetch","headers","Authorization","then","resp","json","res","files","filter","el","mimeType","postProcess","catch","alert","finally","scrollTo","searchTrigger","ev","preventDefault","current","dispatchEvent","Event","state","find","x","body","method","console","log","loginTrigger","username","password","login","status","token","afterLogin","err","useEffect","addEventListener","updateFavorite","isAdd","includes","a","errorMessage","handleMenuClose","orderBy","orderchangeEvent","handleModalClick","mimetype","target","parentNode","attributes","getNamedItem","tagName","anchorEl","setAnchorEl","className","aria-controls","aria-haspopup","onClick","event","currentTarget","variant","keepMounted","Boolean","onClose","r","map","innerText","autoComplete","htmlFor","onChange","inputProps","removeItem","action","onSubmit","placeholder","root","input","disabled","pop","popHistory","maxWidth","container","xs","sm","md","data-id","data-name","data-mimetype","style","image","size","thumbnailLink","top","right","fill","parseInt","placement","href","download","encodeURI","role","aria-label","intervalCheck","intervalDelay","scrollCheck","scrollDelay","partialVisibility","isVisible","concat","delete","aria-labelledby","fullWidth","noWrap","src","controls","autoPlay","autoFocus","required","label","onKeyPress","autoCapitalize","autoCorrect","evt","left","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.93c9a22d.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport {Menu as MenuIcon, Search, ArrowBack, NavigateNext, CloudDownload, FavoriteBorder, Favorite} from '@material-ui/icons';\nimport Menu from '@material-ui/core/Menu';\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core\";\nimport {lightBlue} from \"@material-ui/core/colors\";\nimport {fade} from \"@material-ui/core/styles\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport VisibilitySensor from 'react-visibility-sensor';\n\nconst api = \"https://api.sheltonhuang.me/GoogleDriveProxy/\";\n\nconst isMac = navigator.platform.toUpperCase().indexOf('MAC')>=0;\nconst folderMimeType = 'application/vnd.google-apps.folder';\nconst folderImg = 'folderImg.jpg';\nconst failOverImg = 'imgNotFound.jpg';\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        backgroundColor: lightBlue[\"700\"],\n    },\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    conditionGrow: {\n        [theme.breakpoints.up('sm')]: {\n            flexGrow: 1,\n        }\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: 0,\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 600,\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(7),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n        width: 'calc(100% - 50px)'\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 7),\n        transition: theme.transitions.create('width'),\n        width: '100%'\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n        cursor: 'pointer'\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    form: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    center: {\n        textAlign: 'center',\n    }\n}));\n\nconst getOrderBy = () => JSON.parse(localStorage.getItem(\"orderBy\") || '{\"key\":\"createdTime\",\"order\":\" desc\"}');\nconst putOrderBy = (orderBy) => localStorage.setItem(\"orderBy\", JSON.stringify(orderBy));\n\nconst viewed = (id) => {\n    let recentViews = JSON.parse(localStorage.getItem(\"recentViews\") || \"[]\");\n    let position = recentViews.indexOf(id);\n    if (position > -1) recentViews.splice(position, 1);\n    recentViews.unshift(id);\n    recentViews.splice(100);\n    localStorage.setItem(\"recentViews\", JSON.stringify(recentViews));\n};\n\nconst getRecents = () => JSON.parse(localStorage.getItem(\"recentViews\") || \"[]\");\nconst addHistory = (item) => localStorage.setItem(\"history\", JSON.stringify([...getHistory(), item]));\nconst popHistory = () => {\n    let history = getHistory();\n    if (history.length < 1) return null;\n    let res = history.pop();\n    localStorage.setItem(\"history\", JSON.stringify(history));\n    return res;\n};\nconst getHistory = () => JSON.parse(localStorage.getItem(\"history\") || \"[\\\"folder/root\\\"]\");\n\nfunction getReadableFileSizeString(fileSizeInBytes) {\n    let i = -1, byteUnits = [' kB', ' MB', ' GB', ' TB', 'PB', 'EB', 'ZB', 'YB'];\n    do { fileSizeInBytes = fileSizeInBytes / 1024; i++; } while (fileSizeInBytes > 1024);\n    return Math.max(fileSizeInBytes, 0.1).toFixed(1) + byteUnits[i];\n}\n\nconst getToken = ()=> localStorage.getItem(\"token\");\nlet cacheItems = [];\n\nfunction App() {\n    const classes = useStyles();\n    const inputRef = React.createRef();\n    const iniHistory = getHistory();\n\n    const [loginState, setLoginState]  = React.useState({loggedIn: !!getToken(), open: false, submitting: false});\n    const [searchDisabled, setSearchDisabled] = React.useState(!getToken());\n    const [nextPage, setNextPage] = React.useState({nextPageToken: null, opts: null});\n    const [items, setItems] = React.useState([]);\n    const [folders, setFolders] = React.useState([]);\n    const [history, setHistory] = React.useState(iniHistory);\n    const [favorites, setFavorites] = React.useState([]);\n    const [orderby, setOrderby] = React.useState(getOrderBy());\n    const [view, setViewRaw] = React.useState({open: false});\n    const setView = (obj) => {\n        document.title = obj.open ? obj.name : \"GoogleDriveProxy\";\n        setViewRaw(obj);\n    };\n\n    let previous_state =  new URLSearchParams();\n    if (iniHistory.length > 1) previous_state.set('q', iniHistory[iniHistory.length-1]);\n\n    const hashEventResponder = (e) => {\n        const params = new URLSearchParams(window.location.hash.substr(1));\n        const queryParam = params.get('q'), fileParam = params.get('f');\n        const newParams = new URLSearchParams();\n        newParams.set('q', queryParam ? queryParam : 'folder/root');\n        if (fileParam) newParams.set('f', fileParam);\n\n        let oB = getOrderBy();\n        let orderByQuery = new URLSearchParams({\"orderBy\":oB.key + oB.order}).toString();\n        if (previous_state.get('q') !== newParams.get('q')) {\n            if (e && e.type !== 'rewind') {\n                history.push(previous_state.get('q'));\n                addHistory(previous_state.get('q'));\n            }\n\n            loadResource({value: newParams.get('q') + \"?\" + orderByQuery});\n        } else if (e && e.force) {\n            loadResource({value: newParams.get('q') + \"?\" + orderByQuery});\n        }\n\n        if (fileParam) {\n            accessModal({open: true, id: fileParam});\n        } else {\n            setView({open: false});\n        }\n        window.history.replaceState({}, '', '#' + newParams.toString());\n        previous_state = newParams;\n    };\n\n    const rewind = () => {\n        let params = new URLSearchParams(window.location.hash.substr(1));\n        params.set('q', history.pop());\n        popHistory();\n        window.history.replaceState({}, '', '#' + params.toString());\n        window.dispatchEvent(new Event(\"rewind\"));\n    };\n\n    const loadResource = (opts) => {\n        setSearchDisabled(true);\n        return fetch(`${api}${opts.value}`,  {headers: {Authorization: getToken(), 'Content-Type': 'application/json'}, ...(opts.opts ? opts.opts : {})})\n            .then(resp => resp.json())\n            .then((res) => {\n                cacheItems = res.files.filter(el => el.mimeType !== folderMimeType);\n                setItems(cacheItems);\n                setFolders(res.files.filter(el => el.mimeType === folderMimeType));\n                if (res.nextPageToken) {\n                    setNextPage({nextPageToken: res.nextPageToken, opts: opts})\n                } else {\n                    setNextPage({nextPageToken: null, opts: null})\n                }\n                return res;\n            })\n            .then((res) => opts.postProcess ? opts.postProcess(res) : null)\n            .catch(alert)\n            .finally(() => {\n                window.scrollTo(0, 0);\n                setSearchDisabled(false);\n            });\n    };\n\n    const searchTrigger = (ev) => {\n        ev && ev.preventDefault && ev.preventDefault();\n        let params = new URLSearchParams(window.location.hash.substr(1));\n        params.set('q', inputRef.current.value ? `query/${inputRef.current.value}` : 'folder/root');\n        window.history.replaceState({}, '', '#' + params.toString());\n        window.dispatchEvent(new Event(\"myhashchange\"));\n    };\n\n\n    const accessModal = (state) => {\n        if (state.name) {\n            setView(state);\n        } else {\n            let item = cacheItems.find(x => x.id === state.id);\n            if (item) {\n                setView({...state, name: item.name});\n                viewed(state.id);\n            } else {\n                fetch(`${api}file`, {\n                        body: JSON.stringify({files: [state.id]}),\n                        method: 'POST',\n                        headers: {'Authorization': getToken(), 'Content-Type': 'application/json'}\n                    })\n                    .then(resp => resp.json())\n                    .then(res => {\n                        if (res.files.length === 1) {\n                            setView({...state, name: res.files[0].name});\n                            viewed(state.id);\n                        }\n                    })\n                    .catch(console.log);\n            }\n        }\n    };\n\n    const loginTrigger = (ev) => {\n        if (ev.key === 'Enter' && loginState.username && loginState.password) login();\n    };\n\n    const login = () => {\n        setLoginState({...loginState, submitting: true});\n        fetch(`${api}auth`, {\n            body: JSON.stringify({username: loginState.username, password: loginState.password}),\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'}\n        })\n            .then(resp => {\n                if (resp.status === 401) {\n                    alert(\"Incorrect username or password.\");\n                    throw resp;\n                } else if (resp.status === 200) {\n                    return resp.json();\n                } else {\n                    alert(\"Unknown response \" + resp.status + \" from server.\");\n                    throw resp;\n                }\n            })\n            .then(resp => {\n                localStorage.setItem('token', resp.token);\n                afterLogin();\n                setLoginState({loggedIn: true, open: false, submitting: false});\n            })\n            .catch(err => {\n                console.log(err);\n                setLoginState({...loginState, submitting: false});\n            })\n    };\n\n    const specialLogin = () => {\n        localStorage.setItem('token', loginState.password);\n        setLoginState({loggedIn: true, open: false, submitting: false});\n        afterLogin()\n    };\n\n    const logout = () => {\n        inputRef.current.value = \"\";\n        setLoginState({loggedIn: false, open: false, submitting: false});\n        setItems([]); setFolders([]); setFavorites([]); setHistory([]); setSearchDisabled(true);\n        localStorage.removeItem('token');\n        localStorage.removeItem('history');\n        handleMenuClose();\n    };\n\n    const afterLogin = () => {\n        hashEventResponder();\n        fetch(`${api}favorite`, {headers: {Authorization: getToken()}})\n            .then(resp => resp.json())\n            .then((res) => setFavorites(res.files))\n            .catch(alert);\n    };\n\n    useEffect(() => {\n        window.addEventListener(\"hashchange\", hashEventResponder, false);\n        window.addEventListener(\"myhashchange\", hashEventResponder, false);\n        window.addEventListener(\"rewind\", hashEventResponder, false);\n       if (getToken()) afterLogin();\n    // eslint-disable-next-line\n    }, []);\n\n\n    //modal\n\n    const updateFavorite = (id) => {\n        let isAdd = !favorites.includes(id);\n        fetch(`${api}favorite/${id}`, {headers: {Authorization: getToken()}, method: isAdd ? 'PUT' : 'DELETE'})\n            .then(async resp => {\n                if (resp.status === 204)  {\n                    if (isAdd) {\n                        if (!favorites.includes(id)) {\n                            setFavorites([id, ...favorites])\n                        }\n                    } else {\n                        setFavorites(favorites.filter(x => x !== id));\n                    }\n                } else if (resp.status === 507) {\n                    throw (await resp.json()).errorMessage;\n                } else {\n                    throw resp.json();\n                }\n            })\n            .catch(alert)\n            .finally(handleMenuClose);\n    };\n\n    const fetchRecent = () => {\n        let recentViews = getRecents();\n        if (recentViews.length) {\n            loadResource({\n                value: \"file\",\n                opts: {\n                    body: JSON.stringify({files: recentViews}),\n                    method: 'POST',\n                }}).then(handleMenuClose)\n        }\n    };\n\n    const changeReverse = (e) => {\n        if (e.target.innerText && e.target.innerText.includes('Order By')) {\n            setOrderby({...orderby, order: orderby.order.length ? \"\" : \" desc\"});\n        }\n    };\n\n    useEffect(() => {\n        putOrderBy(orderby);\n        if (!getToken()) return;\n        let orderchangeEvent = new Event(\"myhashchange\");\n        orderchangeEvent.force = true;\n        window.dispatchEvent(orderchangeEvent);\n    }, [orderby]);\n\n    const handleModalClick = (e) => {\n        let el = e.target, id, name, mimetype;\n        do {\n            el = el.parentNode;\n            id = el.attributes.getNamedItem('data-id') ? el.attributes.getNamedItem('data-id').value : null;\n            name = el.attributes.getNamedItem('data-name') ? el.attributes.getNamedItem('data-name').value : null;\n            mimetype = el.attributes.getNamedItem('data-mimetype') ? el.attributes.getNamedItem('data-mimetype').value : null;\n        } while (el.parentNode && !(id && name && mimetype));\n\n        if (e.target.tagName === 'svg' || e.target.tagName === 'path') {  // is favorite click\n            updateFavorite(id);\n        } else {\n            let params = new URLSearchParams(window.location.hash.substr(1));\n            if (mimetype === folderMimeType) {\n                params.set('q', `folder/${id}`);\n                window.history.replaceState({}, '', '#' + params.toString());\n                window.dispatchEvent(new Event(\"myhashchange\"));\n            } else {\n                params.set('f', id);\n                window.history.replaceState({}, '', '#' + params.toString());\n                window.dispatchEvent(new Event(\"myhashchange\"));\n            }\n        }\n    };\n\n    const handleModalClose = () => {\n        let params = new URLSearchParams(window.location.hash.substr(1));\n        params.delete('f');\n        window.history.replaceState({}, '', '#' + params.toString());\n        window.dispatchEvent(new Event(\"myhashchange\"));\n    };\n\n\n    //menu\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleMenuClick = (event) => setAnchorEl(event.currentTarget);\n\n    const handleMenuClose = () => setAnchorEl(null);\n\n\n\n    return (\n        <>\n            <CssBaseline />\n                <AppBar position=\"sticky\" className={classes.appBar}>\n                    <Toolbar>\n                        {loginState.loggedIn ?\n                            (<IconButton color=\"inherit\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleMenuClick}><MenuIcon/></IconButton>) :\n                            ( <Button  variant=\"contained\"  onClick={() => setLoginState({...loginState, open: true})} >Login</Button>)\n                        }\n                        <Menu\n                            id=\"simple-menu\" keepMounted\n                            anchorEl={anchorEl}\n                            open={Boolean(anchorEl)}\n                            onClose={handleMenuClose}\n                        >\n                            <MenuItem onClick={() => {\n                                window.history.replaceState({}, '', '#');\n                                window.dispatchEvent(new Event(\"myhashchange\"));\n                            }} >Home</MenuItem>\n                            <MenuItem onClick={() => loadResource({\n                                value: \"favorite?alt=content\",\n                                postProcess: (r) => setFavorites(r.files.map(x => x.id)) })} >Favorites</MenuItem>\n                            <MenuItem onClick={changeReverse}>\n                                <form className={classes.form} autoComplete=\"off\">\n                                    <FormControl className={classes.formControl}>\n                                        <InputLabel htmlFor=\"orderby\">Order By{orderby.order.length ? ' ⬇️':' ⬆️'}</InputLabel>\n                                        <Select\n                                            value={orderby.key}\n                                            onChange={(event) => setOrderby({...orderby, key: event.target.value})}\n                                            inputProps={{ name: 'Order By', id: 'orderby', }}\n                                        >\n                                            <MenuItem value={'createdTime'}>Create Time</MenuItem>\n                                            <MenuItem value={'name'}>Name</MenuItem>\n                                            <MenuItem value={'quotaBytesUsed'}>Size</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </form>\n                            </MenuItem>\n                            <MenuItem onClick={fetchRecent} >Recently Viewed</MenuItem>\n                            <MenuItem onClick={logout} >Logout</MenuItem>\n                        </Menu>\n\n                        <div className={classes.grow} />\n                        <div className={classes.search}>\n                            <div className={classes.searchIcon}>\n                                <Search />\n                            </div>\n                            <form action=\".\" onSubmit={searchTrigger}>\n                                <InputBase\n                                    placeholder=\"Search…\"\n                                    classes={{\n                                        root: classes.inputRoot,\n                                        input: classes.inputInput,\n                                    }}\n                                    inputProps={{ 'aria-label': 'Search keywords' }}\n                                    inputRef={inputRef}\n                                    disabled={searchDisabled}\n                                    type='search'\n                                />\n                                <IconButton disabled={searchDisabled} onClick={searchTrigger} color='inherit'><NavigateNext/></IconButton>\n                            </form>\n                        </div>\n                        <div className={classes.grow} />\n                        <IconButton color=\"inherit\" disabled={history.length < 1} onClick={rewind}><ArrowBack/></IconButton>\n                    </Toolbar>\n                    {searchDisabled && loginState.loggedIn && <LinearProgress variant=\"query\" />}\n                </AppBar>\n            <main>\n                <Container className={classes.cardGrid} maxWidth=\"lg\" >\n                    <Grid container spacing={4}>\n                        {folders.map(card => (\n                            <Grid item key={card['id']} xs={12} sm={6} md={3}  >\n                                <Card className={classes.card} data-id={card.id} data-name={card.name} data-mimetype={card.mimeType} style={{position: 'relative'}}>\n                                    <CardMedia className={classes.cardMedia} title={card.name} onClick={handleModalClick} image={folderImg} />\n                                    <CardContent className={classes.cardContent}>\n                                        <Typography variant=\"subtitle2\">{card.name}</Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        <Button size=\"small\" color=\"primary\" onClick={handleModalClick}>View</Button>\n                                    </CardActions>\n                                </Card>\n                            </Grid>\n                        ))}\n                        {items.map(card => (\n                            <Grid item key={card['id']} xs={12} sm={6} md={3}  >\n                                <Card className={classes.card} data-id={card.id} data-name={card.name} data-mimetype={card.mimeType} style={{position: 'relative'}}>\n                                    <CardMedia className={classes.cardMedia} title={card.name} onClick={handleModalClick} image={card.thumbnailLink || failOverImg} />\n                                    <IconButton size=\"small\" color=\"primary\" onClick={handleModalClick} style={{ position: 'absolute', top: '17px', right: '20px' }}>\n                                        {favorites.includes(card.id) ? <Favorite style={{fill: '#ea062c'}}/> : <FavoriteBorder style={{fill: '#ea062c'}}/>}\n                                    </IconButton>\n                                    <CardContent className={classes.cardContent}>\n                                        <Typography variant=\"subtitle2\">{card.name}</Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        <Button size=\"small\" color=\"primary\" onClick={handleModalClick}>View</Button>\n                                        <Tooltip title={getReadableFileSizeString(parseInt(card.size))} placement=\"top\">\n                                            <Button size=\"small\" color=\"primary\" href={`${api}file/${card.id}`} download={card.name} target=\"_blank\">\n                                            Download\n                                            </Button>\n                                        </Tooltip>\n                                        {isMac &&\n                                        <Button size=\"small\" color=\"primary\" href={`iina://open?url=${encodeURI(api+'file/'+card.id)}`}>\n                                            <span role=\"img\" aria-label=\"play in iina\">▶️IINA</span>\n                                        </Button>}\n                                    </CardActions>\n                                </Card>\n                            </Grid>\n                        ))}\n                    </Grid>\n                    {nextPage.nextPageToken && (\n                        <VisibilitySensor intervalCheck={false} intervalDelay={750} scrollCheck={true} scrollDelay={250} partialVisibility={true} onChange={(isVisible => {\n                            if (!isVisible) return;\n                            setSearchDisabled(true);\n                            console.log(nextPage);\n                            fetch(`${api}${nextPage.opts.value}&${new URLSearchParams({\"nextPageToken\":nextPage.nextPageToken}).toString()}`,  {headers: {Authorization: getToken(), 'Content-Type': 'application/json'}, ...(nextPage.opts.opts ? nextPage.opts.opts : {})})\n                                .then(resp => resp.json())\n                                .then((res) => {\n                                    setItems(cacheItems = items.concat(res.files.filter(el => el.mimeType !== folderMimeType)));\n                                    setFolders(folders.concat(res.files.filter(el => el.mimeType === folderMimeType)));\n                                    if (res.nextPageToken) {\n                                        setNextPage({...nextPage, nextPageToken: res.nextPageToken})\n                                    } else {\n                                        setNextPage({nextPageToken: null, opts: null})\n                                    }\n                                    return res;\n                                })\n                                .catch(alert)\n                                .finally(() => {\n                                    setSearchDisabled(false);\n                                });\n                        })}>\n                            <Typography className={classes.center}>...loading more...</Typography>\n                        </VisibilitySensor>\n                    )}\n                </Container>\n            </main>\n            <Dialog open={view.open} onClose={handleModalClose} aria-labelledby=\"view screen\" fullWidth maxWidth=\"lg\">\n                {view.open &&\n                <Toolbar>\n                    <Typography noWrap={true} variant=\"h6\" className={classes.title}>\n                        {view.name}\n                    </Typography>\n                    <div className={classes.grow} />\n                    <IconButton size=\"small\" color=\"primary\" onClick={() => updateFavorite(view.id)} style={{marginRight: '4px'}} >\n                        {favorites.includes(view.id) ? <Favorite style={{fill: '#ea062c'}}/> : <FavoriteBorder style={{fill: '#ea062c'}}/>}\n                    </IconButton>\n                    <IconButton size=\"small\" color=\"primary\" href={`${api}file/${view.id}`} download={view.name} target=\"_blank\">\n                        <CloudDownload/>\n                    </IconButton>\n                </Toolbar>\n                }\n                {view.open && <video src={`${api}file/${view.id}`} controls={true} autoPlay />}\n            </Dialog>\n            <Dialog open={loginState.open} onClose={() => setLoginState({...loginState, open: false})} aria-labelledby=\"login window\" fullWidth maxWidth=\"xs\">\n                <DialogTitle>Login to GoogleDriveProxy</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        To use this app, please enter your credential here.\n                    </DialogContentText>\n                    <form autoComplete=\"off\" action=\".\">\n                        <TextField autoFocus required fullWidth margin=\"normal\"\n                             type=\"text\" label=\"Username\" disabled={loginState.submitting} onKeyPress={loginTrigger} inputProps={{ autoCapitalize: 'off', autoCorrect: 'off' }}\n                                   onChange={(evt) => setLoginState({...loginState, username: evt.target.value})}\n                        />\n                        <TextField required fullWidth margin=\"normal\"\n                             type=\"password\" label=\"Password\" disabled={loginState.submitting} onKeyPress={loginTrigger}\n                                   onChange={(evt) => setLoginState({...loginState, password: evt.target.value})}\n                        />\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button style={{position: 'absolute', left: \"10px\"}} onClick={specialLogin} disabled={!loginState.password}/>\n                    <Button disabled={!loginState.username || !loginState.password || loginState.submitting} onClick={login} color=\"primary\">Submit</Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}